{
  "name": "Content Alchemist - Core Pipeline",
  "nodes": [
    {
      "parameters": {
        "operation": "get",
        "propertyName": "youtube_url",
        "key": "={{ $json.body.youtube_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1008,
        352
      ],
      "id": "1c0ce3f1-1148-42a0-bab1-00c4135710c5",
      "name": "Check Cache",
      "credentials": {
        "redis": {
          "id": "7TaMNoBPIrbkoYzr",
          "name": "Valkey Heroku"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Based on this cleaned video transcript, create social media content for Facebook, Instagram, and LinkedIn, plus image generation prompts for each post.\n\nTRANSCRIPT:\n{{ $json.cleaned_text }}\n\nREQUIREMENTS:\n- Facebook: Engaging post with 2-3 paragraphs, focus on community and sharing\n- Instagram: Captivating caption with relevant hashtags, focus on visual appeal\n- LinkedIn: Professional tone, business insights, industry relevance\n- Image Prompts: Detailed, visual descriptions for Hugging Face image generation\n- Return content in the exact JSON structure specified",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "You are a professional social media content creator specializing in creating engaging, platform-optimized content from video transcripts. Your task is to analyze the cleaned transcript and generate social media content for Facebook, Instagram, and LinkedIn, plus image generation prompts for each post.  IMPORTANT RULES: - Create content that feels native to each platform - Use appropriate tone and style for each network - Include relevant hashtags for discoverability - Keep content engaging and shareable - Focus on the key insights and trends from the transcript - Use emojis strategically but not excessively - Generate detailed image prompts for Hugging Face image generation - Return content in the exact JSON structure specified - Always base your content on the actual transcript content provided - Ensure hashtags are relevant to the specific content, not generic - Make image prompts descriptive and specific to the post content"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -336,
        352
      ],
      "id": "34cc32ac-364f-4849-9d74-64f0b0a317a3",
      "name": "Generate Content"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -336,
        576
      ],
      "id": "b9abeadb-057b-4933-bbe9-25810573487c",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "aeuJfNVaRiMKCCCX",
          "name": "Gemini Key 1 alexandre.spindola11@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"facebook\": {\n    \"target\": \"facebook\",\n    \"content\": \"Your Facebook post content here with paragraphs and emojis\",\n    \"hashtags\": [\"#hashtag1\", \"#hashtag2\", \"#hashtag3\"],\n    \"character_count\": 280,\n    \"prompt_generate_image\": \"Detailed image description for Hugging Face\"\n  },\n  \"instagram\": {\n    \"target\": \"instagram\",\n    \"content\": \"Your Instagram caption content here with emojis and line breaks\",\n    \"hashtags\": [\"#hashtag1\", \"#hashtag2\", \"#hashtag3\", \"#hashtag4\"],\n    \"character_count\": 2200,\n    \"prompt_generate_image\": \"Detailed image description for Hugging Face\"\n  },\n  \"linkedin\": {\n    \"target\": \"linkedin\",\n    \"content\": \"Your LinkedIn professional post content here with business insights\",\n    \"hashtags\": [\"#hashtag1\", \"#hashtag2\", \"#hashtag3\"],\n    \"character_count\": 3000,\n    \"prompt_generate_image\": \"Detailed image description for Hugging Face\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -208,
        576
      ],
      "id": "9b22a8e6-a380-4cab-845d-aecbe7aca15f",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://content-alchemist-cleaner.deno.dev",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "transcript",
              "value": "={{ $('Webhook').item.json.body.transcript_raw }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        352
      ],
      "id": "3e18b302-235f-451d-8759-f5d6ec7b82cb",
      "name": "Clean Content"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        16,
        352
      ],
      "id": "b4198288-e111-4ccb-9da1-394385f7d416",
      "name": "Split Out"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-dev",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "image/png"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "inputs",
              "value": "={{ $('Loop Over Items').item.json.prompt_generate_image }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        688,
        352
      ],
      "id": "c97b5148-2543-463f-add5-0b20fdcc5ec8",
      "name": "CREATE Image Hugging Face",
      "retryOnFail": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "AGZUVzTpiNl3gkFM",
          "name": "Header Auth Hugging Face alexandre.spindola@usp.br"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Importar o módulo crypto do Node.js\nconst crypto = require('crypto');\n\n// Gerar um hash aleatório\nconst randomHash = crypto.randomBytes(20).toString('hex');\n\n// Retornar o hash aleatório\nreturn {\n    json: {\n        randomHash: randomHash,\n    },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        464,
        352
      ],
      "id": "7874d41b-3916-4507-9f50-68c2c59e3ef9",
      "name": "CREATE Hash"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        240,
        352
      ],
      "id": "6e283083-c33e-46c6-827b-a21a493cd2ca",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "content-alchemy",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -1232,
        352
      ],
      "id": "bd6a666c-2b2c-468c-95b4-9428861d0984",
      "name": "Webhook",
      "webhookId": "e9367752-e1be-4da0-b401-934f1a4c4cb5"
    },
    {
      "parameters": {
        "folderId": "={{ $('Create folder').item.json.id }}",
        "title": "={{ $now.format('yyyy-MM-dd')}}-{{ $('Webhook').item.json.body.partner_name }}-{{ $('Webhook').item.json.body.campaign_id }}"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        1264,
        112
      ],
      "id": "876a2c31-2a07-4d29-9d0e-92be80e71bb3",
      "name": "Create a document",
      "executeOnce": true,
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "5mNYVIaZTMIxxc71",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Campaign Content Package</title>\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n  <style>\n    :root {\n      --fg:#111; --muted:#555; --bg:#fff; --border:#e5e7eb; --chip:#f3f4f6; --accent:#2563eb;\n    }\n    body { font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; color: var(--fg); background: var(--bg); margin: 0; }\n    .wrap { max-width: 860px; margin: 32px auto; padding: 0 20px; }\n    header { border-bottom: 1px solid var(--border); margin-bottom: 20px; padding-bottom: 16px; }\n    h1 { font-size: 24px; margin: 0 0 8px; }\n    .meta { color: var(--muted); font-size: 14px; display: grid; grid-template-columns: repeat(3, minmax(0,1fr)); gap: 8px; }\n    .section { border: 1px solid var(--border); border-radius: 10px; padding: 16px; margin: 18px 0; }\n    .section h2 { margin: 0 0 12px; font-size: 18px; }\n    .label { font-size: 12px; color: var(--muted); margin: 10px 0 6px; text-transform: uppercase; letter-spacing: .04em; }\n    .content-block { white-space: pre-wrap; line-height: 1.5; }\n    .hashtags { display: flex; flex-wrap: wrap; gap: 6px; margin-top: 6px; }\n    .kvs { display: flex; gap: 16px; color: var(--muted); font-size: 12px; margin-top: 10px; }\n    pre { background: #0b1020; color: #e5e7eb; padding: 12px; border-radius: 8px; overflow: auto; font-size: 12px; }\n    a { color: var(--accent); text-decoration: none; }\n    .chip { background: var(--chip); border: 1px solid var(--border); border-radius: 999px; padding: 4px 10px; font-size: 12px; }\n  </style>\n</head>\n<body>\n  <div class=\"wrap\">\n    <header>\n      <h1>Campaign Content Package</h1>\n      <div class=\"meta\">\n        <div><strong>Campaign ID:</strong> {{ $('Webhook').item.json.body.campaign_id }}</div>\n        <div><strong>Partner:</strong> {{ $('Webhook').item.json.body.partner_name }}</div>\n        <div><strong>YouTube:</strong> <a href=\"{{ $('Webhook').item.json.body.youtube_url }}\">{{ $('Webhook').item.json.body.youtube_url }}</a></div>\n      </div>\n    </header>\n\n    <section class=\"section\" id=\"facebook\">\n      <h2>Facebook</h2>\n      <div class=\"label\">Content</div>\n      <div class=\"content-block\">{{ $('Generate Content').item.json.output.facebook.content }}</div>\n\n      <div class=\"label\">Hashtags</div>\n      <div class=\"hashtags\">\n        {{ Array.isArray($('Generate Content').item.json.output.facebook.hashtags) ? $('Generate Content').item.json.output.facebook.hashtags.map(h => `<span class=\"chip\">${h}</span>`).join('') : '' }}\n      </div>\n\n      <div class=\"kvs\">\n        <div><strong>Characters:</strong> {{ $('Generate Content').item.json.output.facebook.character_count }}</div>\n      </div>\n\n      <div class=\"label\">Image Prompt</div>\n      <pre>{{ $('Generate Content').item.json.output.facebook.prompt_generate_image }}</pre>\n    </section>\n\n    <section class=\"section\" id=\"instagram\">\n      <h2>Instagram</h2>\n      <div class=\"label\">Content</div>\n      <div class=\"content-block\">{{ $('Generate Content').item.json.output.instagram.content }}</div>\n\n      <div class=\"label\">Hashtags</div>\n      <div class=\"hashtags\">\n        {{ Array.isArray($('Generate Content').item.json.output.instagram.hashtags) ? $('Generate Content').item.json.output.instagram.hashtags.map(h => `<span class=\"chip\">${h}</span>`).join('') : '' }}\n      </div>\n\n      <div class=\"kvs\">\n        <div><strong>Characters:</strong> {{ $('Generate Content').item.json.output.instagram.character_count }}</div>\n      </div>\n\n      <div class=\"label\">Image Prompt</div>\n      <pre>{{ $('Generate Content').item.json.output.instagram.prompt_generate_image }}</pre>\n    </section>\n\n    <section class=\"section\" id=\"linkedin\">\n      <h2>LinkedIn</h2>\n      <div class=\"label\">Content</div>\n      <div class=\"content-block\">{{ $('Generate Content').item.json.output.linkedin.content }}</div>\n\n      <div class=\"label\">Hashtags</div>\n      <div class=\"hashtags\">\n        {{ Array.isArray($('Generate Content').item.json.output.linkedin.hashtags) ? $('Generate Content').item.json.output.linkedin.hashtags.map(h => `<span class=\"chip\">${h}</span>`).join('') : '' }}\n      </div>\n\n      <div class=\"kvs\">\n        <div><strong>Characters:</strong> {{ $('Generate Content').item.json.output.linkedin.character_count }}</div>\n      </div>\n\n      <div class=\"label\">Image Prompt</div>\n      <pre>{{ $('Generate Content').item.json.output.linkedin.prompt_generate_image }}</pre>\n    </section>\n  </div>\n</body>\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        688,
        112
      ],
      "id": "7377df59-d882-4c05-9372-6299734aab44",
      "name": "HTML",
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $('Convert to Google Docs').item.json.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        1488,
        112
      ],
      "id": "180f4001-22bb-4c8e-9980-2ea136b38a14",
      "name": "Update a document",
      "executeOnce": true,
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "5mNYVIaZTMIxxc71",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        992,
        224
      ],
      "id": "d1060282-e1c6-47c4-9206-efa47b7c63fc",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "lHX7sF793weN4DUT",
          "name": "Gemini Key 2 admin@gnosisdeutschland.org"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Convert the following HTML into a clean, Google Docs–friendly plain text document per the system rules.\n\nHTML:\n{{ $json.html }}",
        "messages": {
          "messageValues": [
            {
              "message": "You are a precise HTML-to-plain-text formatter for Google Docs.\n\nRequirements:\n- Parse the provided HTML semantically (not regex-only).\n- Extract and output these fields in order:\n  1) Title: Campaign Content Package\n  2) Meta:\n     - Campaign ID: <id>\n     - Partner: <name>\n     - YouTube: <url> (prefer <a href> if valid URL; else use link text)\n  3) Section: Facebook\n     - Content: keep paragraph breaks (blank line between paragraphs), unescape HTML entities.\n     - Hashtags: single line of space-separated tags, ensure each starts with #, remove “null”, trim punctuation, deduplicate.\n     - Characters: use the provided number if present.\n     - Image Prompt: include full text.\n  4) Section: Instagram (same rules as Facebook)\n  5) Section: LinkedIn (same rules as Facebook)\n- When a field is represented by a link (<a>), always extract and output its href (plain URL). If href and visible text differ, prefer href.\n- Preserve paragraph breaks from the “content” blocks.\n- Remove any leftover HTML/CSS, classes (e.g., chip), “null” tokens, duplicate whitespace.\n- If a value is missing/undefined, omit the line gracefully.\n- Output must be plain text only (no code fences, no markdown), with clear headings and blank lines between sections.\n- Do not invent content. Use only what is present in the HTML."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        912,
        0
      ],
      "id": "df51c64a-4911-46e2-bf61-0948726a3bb3",
      "name": "Convert to Google Docs",
      "executeOnce": true
    },
    {
      "parameters": {
        "resource": "folder",
        "name": "={{ $now.format('yyyyMMdd-HHmm') }}-{{ $('Webhook').item.json.body.campaign_id }}",
        "driveId": {
          "__rl": true,
          "value": "My Drive",
          "mode": "list",
          "cachedResultName": "My Drive",
          "cachedResultUrl": "https://drive.google.com/drive/my-drive"
        },
        "folderId": {
          "__rl": true,
          "value": "https://drive.google.com/drive/folders/1xDgtkzCyDJ3MIiCEvFFb3ewaTmkXuwqa",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -784,
        352
      ],
      "id": "2a7d2c77-1529-49bd-86ca-4c3f6626816a",
      "name": "Create folder",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "L2BTc3HZvPF0GIHK",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        464,
        112
      ],
      "id": "f622b1ad-77be-4639-b8b3-c8652abc094f",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1zQdMyV9SDjU-9hhilxlQQVz0Ol527v594JUjzpvA2oo",
          "mode": "list",
          "cachedResultName": "Content Alchemist",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zQdMyV9SDjU-9hhilxlQQVz0Ol527v594JUjzpvA2oo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Content Alchemist",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zQdMyV9SDjU-9hhilxlQQVz0Ol527v594JUjzpvA2oo/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Campaign_ID": "={{ $('Webhook').item.json.body.campaign_id }}",
            "Output_Folder": "=https://drive.google.com/drive/folders/{{ $('Create folder').item.json.id }}",
            "Created_At": "={{ $now.format('dd-MM-yyyy') }}",
            "Status": "Completed"
          },
          "matchingColumns": [
            "Campaign_ID"
          ],
          "schema": [
            {
              "id": "Campaign_ID",
              "displayName": "Campaign_ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Partner_Name",
              "displayName": "Partner_Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "YouTube_URL",
              "displayName": "YouTube_URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Transcript_Raw",
              "displayName": "Transcript_Raw",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Output_Folder",
              "displayName": "Output_Folder",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Created_At",
              "displayName": "Created_At",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1936,
        112
      ],
      "id": "d566d7eb-fb1c-4f75-a991-be23602afc79",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "mpzfbBgCoOnfdJjL",
          "name": "Google Sheets alexandre.spindola11@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "name": "={{ $now.format('yyyy-MM-dd') }}-{{ $json.randomHash }}-{{ $('Loop Over Items').item.json.target.toLowerCase().replace(/\\s+/g, '-') }}.png",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "={{ $('Create folder').item.json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        976,
        432
      ],
      "id": "9550f1cf-3115-4b55-a2a7-28aa0fc69f55",
      "name": "Upload Image",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "L2BTc3HZvPF0GIHK",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Webhook').item.json.body.youtube_url }}",
        "value": "=https://drive.google.com/drive/folders/{{ $('Create folder').item.json.id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1712,
        112
      ],
      "id": "9d198e4b-376f-433e-94e0-8c7c4ec214da",
      "name": "Set Cache (Folder)",
      "credentials": {
        "redis": {
          "id": "7TaMNoBPIrbkoYzr",
          "name": "Valkey Heroku"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n-local.titansdev.es",
            "user-agent": "Mozilla/5.0 (compatible; Google-Apps-Script; beanserver; +https://script.google.com; id: UAEmdDd_F5efYfjiT8Gcx26ZnzSpVG1UJPw)",
            "content-length": "4242",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1",
            "cf-connecting-ip": "107.178.192.37",
            "cf-ipcountry": "US",
            "cf-ray": "974b1a2ebd41c987-IAD",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-warp-tag-id": "a6b29a91-9086-4140-a90b-8d8a6e65ccc2",
            "connection": "keep-alive",
            "content-type": "application/json",
            "x-forwarded-for": "2a0a:a546:73d:0:3c2f:d991:bea9:318d,107.178.192.37",
            "x-forwarded-proto": "https"
          },
          "params": {},
          "query": {},
          "body": {
            "campaign_id": "GRO-1756125037470-517",
            "partner_name": "Groupon",
            "youtube_url": "https://www.youtube.com/watch?v=_TY1l23e1ow",
            "transcript_raw": "# tactiq.io free youtube transcript\n# How Does Groupon Work - Business Model Explained\n# https://www.youtube.com/watch/_TY1l23e1ow\n\n00:00:02.090 [Music]\n00:00:06.399 groupon\n00:00:07.600 if anybody doesn't know who they are\n00:00:09.040 groupon's a website and a mobile app and\n00:00:11.440 what they do is they offer coupons\n00:00:14.000 cashback on purchases and group deals to\n00:00:17.119 different consumers right so they work\n00:00:18.960 with like restaurants retailers\n00:00:21.359 manufacturers and they all use these\n00:00:23.840 deals in an effort to get customers\n00:00:26.640 to walk into their establishment or\n00:00:30.160 purchase their products\n00:00:32.079 groupon is an e-commerce marketplace\n00:00:34.880 right we've talked about marketplaces in\n00:00:36.800 the past right a marketplace is where\n00:00:39.600 buyers and sellers come right a\n00:00:41.600 marketplace could be a supermarket stock\n00:00:44.239 market\n00:00:45.200 and groupon is a marketplace it's\n00:00:47.680 bringing together\n00:00:49.280 buyers and sellers right and they're\n00:00:52.320 making a middle hey it's like arbitrage\n00:00:54.640 right\n00:00:56.320 right you're bringing together a buyer a\n00:00:58.160 seller they don't even necessarily own\n00:01:00.399 any products at least in the beginning\n00:01:01.680 they didn't now they do some of that but\n00:01:04.479 overall what they're doing is in this\n00:01:06.640 marketplace they get people\n00:01:08.960 to subscribe to groupon and they connect\n00:01:12.320 them with local merchants that's what's\n00:01:15.759 so powerful about this is that\n00:01:17.920 groupon was able to help the local\n00:01:19.840 merchant the nail salon the massage\n00:01:23.439 place you know um it could be a a\n00:01:26.400 service like a a\n00:01:28.080 chiropractor or a doctor right the thing\n00:01:30.640 is is that they were able to come out\n00:01:32.560 and do this on a local basis which is\n00:01:34.560 really really powerful right now the\n00:01:37.280 thing with that is that you know there's\n00:01:39.439 two sides of this business there's the\n00:01:41.520 acquisition side of building up your\n00:01:43.439 subscribers building up your your list\n00:01:45.600 your email list that you're going to go\n00:01:47.920 and market to but you also have to have\n00:01:50.240 another side where you need to go find\n00:01:52.720 merchants and get merchants to come and\n00:01:55.280 get deals that they're going to offer\n00:01:57.759 about their product or service\n00:02:00.079 to the groupon subscribers so there's\n00:02:02.799 two sides the business to grow this\n00:02:04.799 right in a marketplace gotta find the\n00:02:06.960 merchants the advertisers and you got to\n00:02:09.038 go find the subscribers of consumers\n00:02:11.038 then you put them together and then you\n00:02:13.360 make\n00:02:14.400 a piece of that revenue they do things\n00:02:16.400 in activities travel goods and services\n00:02:20.080 across 15 countries and\n00:02:23.280 they ultimately trying to save you money\n00:02:25.840 through the use of any type of virtual\n00:02:28.000 coupon that's the value add for a\n00:02:30.560 consumer right what they try to do is\n00:02:32.480 they try to bring together a lot of\n00:02:34.080 people\n00:02:35.040 to take the deal and when that person\n00:02:38.239 when they hit that deal and there's\n00:02:39.599 enough people that that take the deal\n00:02:42.480 then that deal is intact and then\n00:02:46.080 everybody gets a discount so you'll see\n00:02:47.920 things at times where it's like 70\n00:02:50.400 off of the regular price where you\n00:02:52.879 really can't get anywhere else right\n00:02:55.200 that's the value of a subscriber to\n00:02:56.959 groupon and what they're doing is\n00:02:58.959 they're using the power of of people of\n00:03:01.680 groups to come in and say okay let's if\n00:03:04.239 we get a thousand people to buy this\n00:03:06.400 coupon this this this groupon of a deal\n00:03:11.440 at a 70 discount then it's active\n00:03:17.040 [Music]\n00:03:24.560 you"
          },
          "webhookUrl": "https://n8n-local.titansdev.es/webhook-test/content-alchemy",
          "executionMode": "test"
        }
      }
    ]
  },
  "connections": {
    "Check Cache": {
      "main": [
        [
          {
            "node": "Create folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Content",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Generate Content": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Generate Content",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Clean Content": {
      "main": [
        [
          {
            "node": "Generate Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CREATE Hash": {
      "main": [
        [
          {
            "node": "CREATE Image Hugging Face",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CREATE Image Hugging Face": {
      "main": [
        [
          {
            "node": "Upload Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CREATE Hash",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Check Cache",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a document": {
      "main": [
        [
          {
            "node": "Update a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Convert to Google Docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Convert to Google Docs",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Convert to Google Docs": {
      "main": [
        [
          {
            "node": "Create a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a document": {
      "main": [
        [
          {
            "node": "Set Cache (Folder)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create folder": {
      "main": [
        [
          {
            "node": "Clean Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Cache (Folder)": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8fabcb5c-9662-4f5e-a888-756314cb194b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1e8cd585d79c04ebe416ae79f7875a6aa1c7d772f5a48602ee3806a48dd1dc68"
  },
  "id": "72qR9zUL5gKD6EBC",
  "tags": []
}